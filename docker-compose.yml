services:

  express-socket:
    container_name: express-socket
    restart: always
    build:
      context: ./express-socket
      dockerfile: Dockerfile
    volumes:
      - ./express-socket:/app
    ports:
      - "3000:3000"
    networks:
      - cinematch-network

  activemq:
    image: symptoma/activemq:latest
    container_name: activemq
    ports:
      - "61616:61616"
      - "61613:61613"
      - "8161:8161"
    environment:
      ACTIVEMQ_DISALLOW_WEBCONSOLE: "false"
      ACTIVEMQ_USERNAME: "admin"
      ACTIVEMQ_PASSWORD: "cine"
      ACTIVEMQ_WEBADMIN_USERNAME: "admin"
      ACTIVEMQ_WEBADMIN_PASSWORD: "cine"
    networks:
      - cinematch-network

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: cinematch
    command:
      - --storageEngine
      - wiredTiger
      - --auth
    volumes:
      - mongo_data:/data/db
    networks:
      - cinematch-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8091:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - cinematch-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cinematch.com
      PGADMIN_DEFAULT_PASSWORD: cine
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - cinematch-network
  db:
    image: postgres:14-alpine
    container_name: db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=cinematch
    volumes:
      - local_pgdata:/var/lib/postgresql/data
    networks:
      - cinematch-network
  spring-back:
    depends_on:
      - db
    build: ./cinematch-backend-service/cinematch-backend
    container_name: cinematch-monolith
    ports:
      - "8081:8081"
      - "5005:5005"
    networks:
      - cinematch-network

  spring-orchestrator:
    depends_on:
      - activemq
      - mongodb
    build: ./cinematch-backend-service/orchestrator
    container_name: orchestrator
    ports:
      - "8088:8088"
      - "5008:5008"
    networks:
      - cinematch-network
  cinematch-frontend:
    container_name: cinematch-frontend
    restart: no
    build:
      context: ./cinematch-frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./cinematch-frontend:/app
      - /app/node_modules
    depends_on:
      - spring-back
    environment:
      - CHOKIDAR_USEPOLLING=true  # Ensures file changes are detected
      - WATCHPACK_POLLING=true
    networks:
      - cinematch-network
# run in localhost 
  python-api:
    container_name: python-api
    build:
      context: ./python-api
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      - activemq
    volumes:
      - ./python-api:/app
    networks:
      - cinematch-network
    environment:
      - PYTHONUNBUFFERED=TRUE

volumes:
  local_pgdata:
  pgadmin-data:
  mongo_data:

networks:
  cinematch-network: